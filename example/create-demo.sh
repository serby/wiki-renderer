#!/bin/bash

# Create comprehensive demo using Amazon Q Chat
echo 'You are a TypeScript expert creating a comprehensive demo in example/demo.ts for a wiki renderer library. Create a complete TypeScript file that imports and demonstrates EVERY SINGLE element from the wiki renderer library located at /Users/serbypau/Development/JavaScript/wiki-renderer/src/index.ts. Requirements: 1. Import ALL functions from "../src/index" 2. Create a comprehensive demo of that element. It must self describe what element is being used and the various usages. This will at as a test page and documentation, the usage code should be in a typescript code block with all the code that generated the example. You can use cat data with interesting factual information with a depth of data. 3. Show EVERY parameter option for each element and explained what you are doing. Start plan with min parameter and then go into depth. 4. Include both plain and styled examples for elements that support styling 5. Create a sortable table with 8+ cat attributes (no header styling) 6. Include code examples in TypeScript, Swift/SwiftUI, and Kotlin. Ensure code is correctly escaped. 7. Use ALL header levels (h1-h6) and paragraph elements throughout 8. Export the demo as a rendered string: console.log(render(demoContent)) Include all elements but sort them from simple to advanced. Ensure nothing is missed. - All headers (h1, h2, h3, h4, h5, h6) - Text formatting (strong, emphasis, underline, strike, mono, superscript, subscript) - Paragraphs and text nodes. Make it educational about firstly about the elements and then about cats. columns must have multiline children to work correctly. Check and double check that every element and parameter version is covered. multiline should use p() for next lines inside. For images you can use [[image:icon:star]] [[image:icon:exclamation]] [[image:icon:accept]]  [[image:icon:arrow_right]] [[image:amazon-logo.png||style="width:100px; height:100px;"]] [[image:amazon-logo.png||width="100"]] Then run it to create output in tsx demo.ts > output.wiki'
